{"mappings":"qhBASA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,qBACpCE,EAAiBH,SAASC,cAAc,oBACxCG,EAAcJ,SAASC,cAAc,sBAC1BD,SAASK,qBAAqB,UAE/C,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAKZT,EAAKiB,iBAAiB,UAAUC,IAC/BA,EAAMC,iBAEJ,MAAMC,EAAaC,OAAOlB,EAAWmB,OAC/BC,EAAYF,OAAOjB,EAAekB,OACnCE,EAAcH,OAAOhB,EAAYiB,OAEpC,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAaC,GAAY,EAAG,CAE7DlB,EAAckB,EADAL,EAAcG,GAAaE,EAAW,IAEnDC,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBkB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,MAAU,IAEzEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBkB,EAAA7B,GAAS8B,OAAOG,QAAQ,sBAAoBvB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst inputDelay = document.querySelector('input[name=delay]');\nconst inputDelayStep = document.querySelector('input[name=step]');\nconst inputAmount = document.querySelector('input[name=amount]');\nconst btnStart = document.getElementsByTagName('button');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n  \n}\n\n form.addEventListener('submit', event => {\n  event.preventDefault();\n\n    const delayValue = Number(inputDelay.value);\n    const stepValue = Number(inputDelayStep.value);\n   const amountValue = Number(inputAmount.value);\n   \n      for (let position = 1; position <= amountValue; position += 1) {\n        const delay = delayValue + (stepValue * (position - 1));\n        createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n      }\n});\n\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$inputDelay","$47d4ff9957288465$var$inputDelayStep","$47d4ff9957288465$var$inputAmount","getElementsByTagName","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delayValue","Number","value","stepValue","amountValue","position1","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.22062b5b.js.map"}